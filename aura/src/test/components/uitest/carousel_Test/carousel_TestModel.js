/*
 * Copyright (C) 2013 salesforce.com, inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS"BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 {
 	longStr : "Understanding Execution Governors and Limits%0D%0ABecause Apex runs in a multitenant environment, the Apex runtime engine strictly enforces a number of limits to ensure that runaway Apex does not monopolize shared resources. These limits, or governors, track and enforce the statistics outlined in the following table. If some Apex code ever exceeds a limit, the associated governor issues a runtime exception that cannot be handled.%0D%0AGovernor limits apply to an entire organization, as well as to specific namespaces. For example, if you install a managed package created by a salesforce.com ISV Partner from Force.com AppExchange, the components in the package belong to a namespace unique from other components in your organization. Consequently, any Apex code in that package can issue up to 150 DML statements while executing. In addition, any Apex code that is native to your organization can also issue up to 150 DML statements, meaning more than 150 DML statements might execute during a single request if code from the managed package and your native organization both execute. Conversely, if you install a package from AppExchange that is not created by a salesforce.com ISV Partner, the code from that package does not have its own separate governor limit count. Any resources it uses counts against the total for your organization. Cumulative resource messages and warning emails are also generated based on managed package namespaces as well. For more information on salesforce.com ISV Partner packages, see salesforce.com Partner Programs.%0D%0ADescription	Limit%0D%0ATotal number of SOQL queries issued1	100%0D%0ATotal number of SOQL queries issued for Batch Apex and future methods1	200%0D%0ATotal number of records retrieved by SOQL queries	50,000%0D%0ATotal number of records retrieved by Database.getQueryLocator	10,000%0D%0ATotal number of SOSL queries issued	20%0D%0ATotal number of records retrieved by a single SOSL query	2000%0D%0ATotal number of DML statements issued2	150%0D%0ATotal number of records processed as a result of DML statements, Approval.process, or database.emptyRecycleBin	10,000%0D%0ATotal number of executed code statements	200,000%0D%0ATotal number of executed code statements for Batch Apex and future methods	1,000,000%0D%0ATotal heap size3	6 MB%0D%0ATotal heap size for Batch Apex and future methods	12 MB%0D%0ATotal stack depth for any Apex invocation that recursively fires triggers due to insert, update, or delete statements4	16%0D%0AFor loop list batch size	200%0D%0ATotal number of callouts (HTTP requests or Web services calls) in a request	10%0D%0AMaximum timeout for all callouts (HTTP requests or Web services calls) in a request	120 seconds%0D%0ADefault timeout of callouts (HTTP requests or Web services calls) in a request	10 seconds%0D%0ATotal number of methods with the future annotation allowed per Apex invocation5	10%0D%0AMaximum size of callout request or response (HTTP request or Web services call)6	3 MB%0D%0ATotal number of sendEmail methods allowed	10%0D%0ATotal number of describes allowed7	100%0D%0ATotal number of classes that can be scheduled concurrently	100%0D%0ATotal number of test classes that can be queued per a 24-hour period8	The greater of 500 or 10 multiplied by the number of test classes in the organization%0D%0A 1 In a SOQL query with parent-child relationship sub-queries, each parent-child relationship counts as an additional query. These types of queries have a limit of three times the number for top-level queries. The row counts from these relationship queries contribute to the row counts of the overall code execution. ...",
 	pageList : ["page #1","page #2","page #3","page #4","page #5","page #6","page #7","page #8","page #9","page #10","page #11","page #12","page #13","page #14","page #15","page #16","page #17","page #18","page #19","page #20","page #21","page #22","page #23","page #24","page #25","page #26","page #27","page #28","page #29","page #30","page #31","page #32","page #33","page #34","page #35","page #36","page #37","page #38","page #39","page #40","page #41","page #42","page #43","page #44","page #45","page #46","page #47","page #48","page #49","page #50","page #51","page #52","page #53","page #54","page #55","page #56","page #57","page #58","page #59","page #60","page #61","page #62","page #63","page #64","page #65","page #66","page #67","page #68","page #69","page #70","page #71","page #72","page #73","page #74","page #75","page #76","page #77","page #78","page #79","page #80","page #81","page #82","page #83","page #84","page #85","page #86","page #87","page #88","page #89","page #90","page #91","page #92","page #93","page #94","page #95","page #96","page #97","page #98","page #99","page #100"]
 }
<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component renderer="java://org.auraframework.component.auraStorage.InitRenderer" support="GA">
    <aura:attribute name="name" type="String" required="true" description="The programmatic name for the storage instance."/>
    <aura:attribute name="persistent" type="Boolean" default="false" description="Set to true if this storage requires persistent storage support."/>
    <aura:attribute name="secure" type="Boolean" default="false" description="Set to true if this storage requires secure storage support."/>
    <aura:attribute name="clearStorageOnInit" type="Boolean" default="true" description="Set to true to delete all previous data on initialization for persistent storage."/>
    <aura:attribute name="defaultExpiration" type="Integer" default="10" description="The default number of seconds that an object will be retained in storage if a request specific expiration has not been specified in the call to Action.setStorable()."/>
    <aura:attribute name="defaultAutoRefreshInterval" type="Integer" default="30" description="The default number of seconds before an auto refresh request will be initiated if a request specific interval has not been specified in the call to Action.setStorable()."/>
    <aura:attribute name="maxSize" type="Integer" default="1000" description="Maximum size in kilobytes that will be used in the memory adapter's storage. Existing items will be evicted to make room for new items using LRU and expiry strategies."/>
    <aura:attribute name="debugLoggingEnabled" type="Boolean" default="false" description="Controls if additional $A.log() messages are generated."/>
    <aura:attribute name="requireUseStorageQueryParam" type="Boolean" default="false" description="If true, aura.useStorage=true must be set in the query string in the URL to use the storage service. If true and the query parameter is not set, storage is not initialized."/>
    
    <aura:handler name="init" value="{!this}" action="{!c.init}"/>
    <aura:handler event="aura:connectionLost" action="{!c.connectionLost}"/>
    <aura:handler event="aura:connectionResumed" action="{!c.connectionResumed}"/>
</aura:component>

<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component extends="ui:input" support="proto" description="This component suggests a list of values from the data provider as you type in input components such as ui:inputText and ui:inputTextArea. To set the list options, use the ui:autocompleteOption component in the listOption attribute. The behaviors for a text match, input change, and option display can be customized using the matchText, inputChange, and selectListOption events respectively.">
    <aura:attribute name="dataProvider" type="Aura.Component[]" required="true" description="A list of data provider components"/>
    <aura:attribute name="inputClass" type="String" description="The css class for input component."/>
    <aura:attribute name="inputType" type="String" default="inputText" description="The type of input component. We support inputText and inputTextArea for now."/>
    <aura:attribute name="listOption" type="Aura.ComponentDefRef[]" required="true" description="A ComponentDefRef to use as the template for each generated option in the list."/>
    <aura:attribute name="optionVar" type="String" required="true" description="The name by which to refer to the current data object inside of the template for each option."/>
    <aura:attribute name="placeholder" type="String" default="" description="Text that is displayed when the input field is empty, to prompt the user for a valid entry."/>
    <aura:attribute name="propertyToMatch" type="String" default="label" description="The property name in the data object which is used to match typing in the input field."/>
    <aura:attribute name="theme" type="String" default="default" description="Theme to apply to this component."/>
    
    <aura:attribute name="header" type="Aura.Component[]" description="A facet above the rendered list, for use as a list header"/>
    <aura:attribute name="footer" type="Aura.Component[]" description="A facet below the rendered list, for use as a list footer"/>
    
    <aura:registerEvent name="inputChange" type="ui:inputChange" description="The event fired when the input value changes."/>
    <aura:registerEvent name="selectListOption" type="ui:selectListOption" description="The event fired when a list option is displayed."/>
    
    <aura:registerEvent name="matchText" type="ui:matchText" description="The event fired when a text match occurs."/>
    <aura:handler name="matchText" action="{!c.matchText}"/>
    
    <aura:handler name="init" value="{!this}" action="{!c.doInit}"/>
    
    <aura:if isTrue="{!v.inputType == 'inputTextArea'}">
        <ui:inputTextAreaForAutocomplete aura:id="input" class="{!v.inputClass+' '+v.theme}" placeholder="{!v.placeholder}"/>
        <aura:set attribute="else">
            <ui:inputTextForAutocomplete aura:id="input" class="{!v.inputClass+' '+v.theme}" placeholder="{!v.placeholder}"/>
        </aura:set>
    </aura:if>
    
    <ui:autocompleteList aura:id="list" class="{!v.class}" 
        dataProvider="{!v.dataProvider}" 
        itemVar="{!v.optionVar}" 
        itemTemplate="{!v.listOption}"
        header="{!v.header}"
        footer="{!v.footer}"
        theme="{!v.theme}"
        visible="false"
        role="listbox"
        propertyToMatch="{!v.propertyToMatch}"
        selectListOption="{!c.handleSelectOption}"
        updateAriaAttributes="{!c.updateAriaAttributes}"/>
</aura:component>